function feature_matrix = DSSCFeatureSetNeighbor( stateMat1, stateMat2 )
    
    x_1         = stateMat1(:,1);
    y_1         = stateMat1(:,2);
    z_1         = stateMat1(:,3);
    xdot_1         = stateMat1(:,4);
    ydot_1         = stateMat1(:,5);
    zdot_1         = stateMat1(:,6);
    
    x_2         = stateMat2(:,1);
    y_2         = stateMat2(:,2);
    z_2         = stateMat2(:,3);
    xdot_2         = stateMat2(:,4);
    ydot_2         = stateMat2(:,5);
    zdot_2         = stateMat2(:,6);
    
    delta_x     = x_2 - x_1;
    delta_y     = y_2 - y_1;
    delta_z     = z_2 - z_1;
    delta_xdot  = xdot_2 - xdot_1;
    delta_ydot  = ydot_2 - ydot_1;
    delta_zdot  = zdot_2 - zdot_1;
       
    % State Variables
    feature_matrix = [ ...
       
        x_1, ...
        y_1, ...
        z_1, ...
        xdot_1, ...
        ydot_1, ...
        zdot_1, ...
        x_2, ...
        y_2, ...
        z_2, ...
        xdot_2, ...
        ydot_2, ...
        zdot_2];
    
    % Trig functions of heading
%    feature_matrix = [feature_matrix, ...
%        cos(theta_1), ...
%        sin(theta_1), ...
%        tan(theta_1), ...
%        cos(theta_2), ...
%        sin(theta_2), ...
%        tan(theta_2)];
    
    % Powers of delta values
    feature_matrix = [feature_matrix, ...
        abs(delta_x), ...
        abs(delta_y), ...
        abs(delta_z), ...
        abs(delta_xdot), ...
        abs(delta_ydot), ...
        abs(delta_zdot), ...
        delta_x.^2, ...
        delta_y.^2, ...
        delta_z.^2, ...
        delta_xdot.^2, ...
        delta_ydot.^2, ...
        delta_zdot.^2, ...
        delta_x.^3, ...
        delta_y.^3, ...
        delta_z.^3, ...
        delta_xdot.^3, ...
        delta_ydot.^3, ...
        delta_zdot.^3];
    
    % Magnitudes
    feature_matrix = [feature_matrix, ...
        sqrt(delta_x.^2+delta_y.^2+delta_z.^2), ...
        sqrt(delta_xdot.^2+delta_ydot.^2+delta_zdot.^2), ...
        sqrt(delta_x.^2 + delta_y.^2+ delta_z.^2 + ...
            delta_xdot.^2 + delta_ydot.^2 + delta_zdot.^2)]; 
    
%    % Trig of delta values
%    feature_matrix = [feature_matrix, ...
%        cos(delta_theta), ...
%        sin(delta_theta), ...
%        tan(delta_theta), ...
%        ...
%        delta_x.*cos(delta_theta), ...
%        delta_x.*sin(delta_theta), ...
%        delta_x.*tan(delta_theta), ...
%        delta_y.*sin(delta_theta), ...
%        delta_y.*cos(delta_theta), ...
%        delta_y.*tan(delta_theta), ...
%        delta_z.*sin(delta_theta), ...
%        delta_z.*cos(delta_theta), ...
%        delta_z.*tan(delta_theta)];
%    
%    % Products
%    feature_matrix = [feature_matrix, ...
%        delta_x.*delta_xdot, ...
%        delta_y.*delta_ydot, ...
%        delta_z.*delta_zdot, ...
%        delta_x.*delta_y.*delta_z, ...
%        delta_xdot.*delta_ydot.*delta_zdot, ...
%        delta_x.*delta_y.*delta_z.*delta_xdot.*delta_ydot.*delta_zdot];
%    
%    % Ratios
%    feature_matrix = [feature_matrix, ...
%        delta_theta./delta_z, ...
%        delta_theta./sqrt(delta_x.^2+delta_y.^2), ...
%        delta_theta./sqrt(delta_x.^2+delta_y.^2+delta_z.^2), ...
%        sin(delta_theta)./sqrt(delta_x.^2+delta_y.^2), ...
%        sin(delta_theta)./sqrt(delta_x.^2+delta_y.^2+delta_z.^2), ...
%        cos(delta_theta)./sqrt(delta_x.^2+delta_y.^2), ...
%        cos(delta_theta)./sqrt(delta_x.^2+delta_y.^2+delta_z.^2), ...
%        tan(delta_theta)./sqrt(delta_x.^2+delta_y.^2), ...
%        tan(delta_theta)./sqrt(delta_x.^2+delta_y.^2+delta_z.^2), ...
%        ...
%        sqrt(delta_x.^2+delta_y.^2)./delta_z, ...
%        sqrt(delta_x.^2+delta_y.^2)./delta_theta, ...
%        sqrt(delta_x.^2+delta_y.^2+delta_z.^2)./delta_theta, ...
%        ];
end
